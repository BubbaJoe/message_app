on:
  push:
    branches:
      - release
name: build-release
jobs:
  build:
    name: Build Release APK
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Load Firebase Config
      env:
        FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
      run: echo $FIREBASE_CONFIG > ./android/app/google-services.json
    - name: Load and decrypt keystore file
      env:
        RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
        RELEASE_KEYSTORE_PASSPHRASE: ${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}
        ENCRYPTED_KEYSTORE_PATH: ${{ secrets.ENCRYPTED_KEYSTORE_PATH }}
        DECRYPTED_KEYSTORE_PATH: ${{ secrets.DECRYPTED_KEYSTORE_PATH }}
      run: |
        mkdir keys
        echo $RELEASE_KEYSTORE > ./keys/release_key.jks.asc
        gpg -d --passphrase ${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }} --batch ./keys/release_key.jks.asc > ./keys/release_key.jks
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'
    - run: flutter pub get
    - run: flutter analyze .
    - run: flutter build apk --split-per-abi
    - name: Bump version and push tag
      uses: mathieudutour/github-tag-action@v5.1
      with:
        github_token: ${{ secrets.MESSAGE_APP_TOKEN }}
      id: generate-tag
    - name: Create a Release APK
      uses: ncipollo/release-action@v1
      with:
        tag: "${{ steps.generate-tag.outputs.new_tag }}"
        artifacts: "build/app/outputs/apk/release/*.apk"
        token: ${{ secrets.MESSAGE_APP_TOKEN }}
    - uses: mkrakowitzer/actions-googledrive@master
      with:
        upload-from: ./build/app/outputs/apk/release/
        upload-to: APKS/message_app/
        skicka-tokencache-json: ${{ secrets.SKICKA_TOKENCACHE_JSON }}
        google-client-id: ${{ secrets.DRIVE_CLIENT_ID }}
        google-client-secret: ${{ secrets.DRIVE_CLIENT_SECRET }}
        remove-outdated: 'false'
